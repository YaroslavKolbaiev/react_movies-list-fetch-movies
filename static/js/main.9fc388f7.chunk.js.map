{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","href","imdbID","MoviesList","movies","map","getMovie","query","fetch","then","res","json","FindMovie","addMovie","useState","setMovie","setQuery","isError","setIsError","isLoading","setIsLoading","fetchMovie","event","a","preventDefault","movieFromServer","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","length","onClick","App","setMovies","kino","prevState","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fc388f7.chunk.js","sourcesContent":["import React from 'react';\nimport { MovieData } from '../../types/MovieData';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: MovieData,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movie.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${movie.imdbID}`} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: MovieData[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbID}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2d04de72';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json());\n}\n","import React, { FormEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  addMovie: (kino: any) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<MovieData | null>(null);\n  const [query, setQuery] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchMovie = async (event: FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    const movieFromServer = await getMovie(query);\n\n    if (!movieFromServer.imdbID) {\n      setIsError(true);\n      setMovie(null);\n    }\n\n    if (movieFromServer.imdbID) {\n      setMovie(movieFromServer);\n      setIsError(false);\n    }\n\n    setIsLoading(false);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query.length}\n              onClick={fetchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setIsError(false);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { MovieData } from './types/MovieData';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<MovieData[]>([]);\n\n  const addMovie = (kino: MovieData) => {\n    setMovies((prevState) => {\n      if (prevState.some(movie => movie.imdbID === kino.imdbID)) {\n        return prevState;\n      }\n\n      return [...prevState, kino];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}